#include <QDebug>
#include "runner.h"
#include "Simplebot.h"

static const int Iterations = 200;

Runner::Runner(QObject *parent)
    : QObject(parent), _feeder("AAPL", 400)
{
    Prices p = {
        125.01,
        125.26,
        127.62,
        126.32,
        125.87,
        126.01,
        128.95,
        128.77,
        130.19,
        130.07,
        130.06,
        131.39,
        132.54,
        129.62,
        132.04,
        131.78,
        130.28,
        130.54,
        129.96,
        130.12,
        129.36,
        128.65,
        127.8,
        127.42,
        128.88,
        128.59,
        127.17,
        126.92,
        127.6,
        127.3,
        127.88,
        126.6,
        127.61,
        127.03,
        128.11,
        127.5,
        126.75,
        124.53,
        125.43,
        126.6,
        126.44,
        126,
        125.69,
        122.57,
        120.07,
        123.28,
        125.66,
        125.61,
        126.82,
        128.51,
        129.62,
        132.07,
        130.75,
        125.22,
        125.16,
        124.5,
        122.77,
        123.38,
        122.99,
        122.37,
        121.3,
        118.44,
        114.64,
        115.4,
        115.13,
        115.52,
        119.72,
        113.49,
        115.24,
        115.15,
        115.96,
        117.16,
        116.5,
        115.01,
        112.65,
        105.76,
        103.12,
        103.74,
        109.69,
        112.92,
        113.29,
        112.76,
        107.72,
        112.34,
        110.37,
        109.27,
        112.31,
        110.15,
        112.57,
        114.21,
        115.31,
        116.28,
        116.41,
        113.92,
        113.45,
        115.21,
        113.4,
        114.32,
        115,
        114.71,
        112.44,
        109.06,
        110.3,
        109.58,
        110.38,
        110.78,
        111.31,
        110.78,
        109.5,
        112.12,
        111.6,
        111.79,
        110.21,
        111.86,
        111.04,
        111.73,
        113.77,
        113.76,
        115.5,
        119.08,
        115.28,
        114.55,
        119.27,
        120.53,
        119.5,
        121.18,
        122.57,
        122,
        120.92,
        121.06,
        120.57,
        116.77,
        116.11,
        115.72,
        112.34,
        114.18,
        113.69,
        117.29,
        118.78,
        119.3,
        117.75,
        118.88,
        118.03,
        117.81,
        118.3,
        117.34,
        116.28,
        115.2,
        119.03,
        118.28,
        118.23,
        115.62,
        116.17,
        113.18,
        112.48,
        110.49,
        111.34,
        108.98,
        106.03,
        107.33,
        107.23,
        108.61,
        108.03,
        106.82,
        108.74,
        107.32,
        105.26,
        105.35,
        102.71,
        100.7,
        96.45,
        96.96,
        98.53,
        99.96,
        97.39,
        99.52,
        97.13,
        96.66,
        96.79,
        96.3,
        101.42,
        99.44,
        99.99,
        93.42,
        94.09,
        97.34,
        96.43,
        94.48,
        96.35,
        96.6,
        94.02,
        95.01,
        94.99,
        94.27,
        93.7,
        93.99,
        96.64,
        98.12,
        96.26,
        96.04,
        96.88,
        94.69,
        96.1,
        96.76,
        96.91,
        96.69,
        100.53,
        100.75,
        101.5,
        103.01,
        101.87,
        101.03,
        101.12,
        101.17,
        102.26,
        102.52,
        104.58,
        105.97,
        105.8,
        105.92,
        105.91,
        106.72,
        106.13,
        105.67,
        105.19,
        107.68,
        109.56,
        108.99,
        109.99,
        111.12,
        109.81,
        110.96,
        108.54,
        108.66,
        109.02,
        110.44,
        112.04,
        112.1,
        109.85,
        107.48,
        106.91,
        107.13,
        105.97,
        105.68,
        105.08,
        104.35,
        97.82,
        94.83,
        93.74,
        93.64,
        95.18,
        94.19,
        93.24,
        92.72,
        92.79,
        93.42,
        92.51,
        90.34,
        90.52,
        93.88,
        93.49,
        94.56,
        94.2,
        95.22,
        96.43,
        97.9,
        99.62,
        100.41,
        100.35,
        99.86,
        98.46,
        97.72,
        97.92,
        98.63,
        99.03,
        98.94,
        99.65,
        98.83,
        97.34,
        97.46,
        97.14,
        97.55,
        95.33,
        95.1,
        95.91,
        95.55,
        96.1,
        93.4,
        92.04,
        93.59,
        94.4,
        95.6,
        95.89,
        94.99,
        95.53,
        95.94,
        96.68,
        96.98,
        97.42,
        96.87,
        98.79,
        98.78,
        99.83,
        99.87,
        99.96,
        99.43,
        98.66,
        97.34,
        96.67,
        102.95,
        104.34,
        104.21,
        106.05,
        104.48,
        105.79,
        105.87,
        107.48,
        108.37,
        108.81,
        108,
        107.93,
        108.18,
        109.48,
        109.38,
        109.22,
        109.08,
        109.36,
        108.51,
        108.85,
        108.03,
        107.57,
        106.94,
        106.82,
        106,
        106.1,
        106.73,
        107.73,
        107.7,
        108.36,
        105.52,
        103.13,
        105.44,
        107.95,
        111.77,
        115.57,
        114.92,
        113.58,
        113.57,
        113.55,
        114.62,
        112.71,
        112.88,
        113.09,
        113.95,
        112.18,
        113.05,
        112.52,
        113,
        113.05,
        113.89,
        114.06,
        116.05,
        116.3,
        117.34,
        116.98,
        117.63,
        117.55,
        117.47,
        117.12,
        117.06,
        116.6,
        117.65,
        118.25,
        115.59,
        114.48,
        113.72,
        113.54,
        111.49,
        111.59,
        109.83,
        108.84,
        110.41,
        111.06,
        110.88,
        107.79,
        108.43,
        105.71,
        107.11,
        109.99,
        109.95,
        110.06,
        111.73,
        111.8,
        111.23,
        111.79,
        111.57,
        111.46,
        110.52,
        109.49,
        109.9
    };

    start(p);

    //connect(&_feeder, SIGNAL(finished(const Prices &)), this, SLOT(start(const Prices &)));
}

void Runner::start(const Prices &history)
{
    if (history.size() < 2 * Iterations)
    {
        qDebug() << "Cannot process so few input";
        return;
    }

    Prices oldTrades = history.mid(0, history.size() - Iterations);
    SimpleBot bot(oldTrades);

    for (int i = history.size() - Iterations; i < history.size(); ++i)
        bot.processPrice(history[i]);

    Result best = bot.getBest();
    switch (best.type)
    {
        case MACD:
            qDebug() << "MACD is the best";
            break;
        case Bollinger:
            qDebug() << "Bollinger is the best";
            break;
        case Trends:
            qDebug() << "Trends is the best";
            break;
        default:
            qDebug() << "Bots are shy today";
            return;
    }

    qDebug() << "Sells:" << best.sells
             << "| Purchases:" << best.purchases
             << "| Mistakes:" << best.mistakes;
}
